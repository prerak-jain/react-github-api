{"version":3,"sources":["Header/Header.js","ProfileCard/ProfileCard.js","Repos/Repos.js","SearchUser/SearchUser.js","App.js","index.js"],"names":["Header","className","href","target","rel","Icon","name","size","ProfileCard","props","Card","Image","src","avatarUrl","wrapped","ui","Content","userName","extra","repos","followers","following","Repos","renderRepos","map","repo","key","repoId","as","repoName","Grid","columns","Column","width","Meta","repoCreatedAt","slice","repoLastUpdated","repoDescription","Description","textAlign","disabled","color","repoStars","repoLanguage","SearchUser","fetchUser","Promise","all","fetch","then","res1","res2","json","profileData","reposData","message","setState","errorMessage","loading","catch","err","handleSearch","e","userInput","value","handleSubmit","preventDefault","state","toastDiv","document","getElementById","classList","add","innerHTML","setTimeout","remove","querySelector","blur","bind","this","avatar_url","login","public_repos","reposArray","repoData","id","description","updated_at","stargazers_count","language","created_at","length","Object","keys","data","Responsive","minWidth","divided","Row","dividing","maxWidth","Form","onSubmit","Group","Input","placeholder","onChange","Button","content","Message","negative","Component","App","ReactDOM","render","StrictMode"],"mappings":"4TAyBeA,MArBf,WACE,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,eACb,+CAEF,uBACEC,KAAK,yBACLC,OAAO,SACPC,IAAI,uBAEJ,yBAAKH,UAAU,aACb,kBAACI,EAAA,EAAD,CAAMC,KAAK,SAASC,KAAK,UAD3B,sBAGE,kBAACF,EAAA,EAAD,CAAMC,KAAK,qBAAqBC,KAAK,c,gFCkBhCC,EAjCK,SAACC,GACnB,OACE,yBAAKR,UAAU,QACb,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAKH,EAAMI,UAAWC,SAAO,EAACC,IAAI,IACzC,kBAACL,EAAA,EAAKM,QAAN,KACE,kBAACN,EAAA,EAAKV,OAAN,KAAcS,EAAMH,MACpB,kBAACI,EAAA,EAAKV,OAAN,KAAcS,EAAMQ,WAEtB,kBAACP,EAAA,EAAKM,QAAN,CAAcE,OAAK,GACjB,8BACE,kBAACb,EAAA,EAAD,CAAMC,KAAK,SACVG,EAAMU,MAFT,kBAKF,kBAACT,EAAA,EAAKM,QAAN,CAAcE,OAAK,GACjB,8BACE,kBAACb,EAAA,EAAD,CAAMC,KAAK,UACVG,EAAMW,UAFT,eAMF,kBAACV,EAAA,EAAKM,QAAN,CAAcE,OAAK,GACjB,8BACE,kBAACb,EAAA,EAAD,CAAMC,KAAK,eACVG,EAAMY,UAFT,kBCwBKC,EA/CD,SAACb,GACb,IAAIc,EAAcd,EAAMU,MAAMK,KAAI,SAACC,GACjC,OACE,kBAACf,EAAA,EAAD,CAAMgB,IAAKjB,EAAMkB,QACf,kBAACjB,EAAA,EAAKM,QAAN,KACE,kBAAC,IAAD,CAAQY,GAAG,MAAMH,EAAKI,UAEtB,kBAACC,EAAA,EAAD,CAAMC,QAAS,IACb,kBAACD,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACvB,EAAA,EAAKwB,KAAN,KACE,2CAAiBT,EAAKU,cAAcC,MAAM,EAAG,OAGjD,kBAACN,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAACvB,EAAA,EAAKwB,KAAN,KACE,2CAAiBT,EAAKY,gBAAgBD,MAAM,EAAG,QAI3B,OAAzBX,EAAKa,gBACJ,kBAAC5B,EAAA,EAAK6B,YAAN,KAAmBd,EAAKa,iBAExB,kBAAC5B,EAAA,EAAK6B,YAAN,0BAGJ,kBAAC7B,EAAA,EAAKM,QAAN,CAAcE,OAAK,GACjB,kBAACY,EAAA,EAAD,CAAMC,QAAS,GACb,kBAACD,EAAA,EAAKE,OAAN,KACE,kBAACtB,EAAA,EAAK6B,YAAN,CAAkBC,UAAU,UAC1B,kBAACnC,EAAA,EAAD,CAAMoC,UAAQ,EAACC,MAAM,QAAQpC,KAAK,SACjCmB,EAAKkB,YAGV,kBAACb,EAAA,EAAKE,OAAN,KACE,kBAACtB,EAAA,EAAK6B,YAAN,CAAkBC,UAAU,UACzBf,EAAKmB,qBASpB,OAAO,kBAAC,WAAD,KAAWrB,IC0JLsB,G,yDAlMb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IAYRqC,UAAY,SAAC7B,GACX8B,QAAQC,IAAI,CACVC,MAAM,gCAAD,OAAiChC,IACtCgC,MAAM,gCAAD,OAAiChC,EAAjC,0BAEJiC,MAAK,mCAAEC,EAAF,KAAQC,EAAR,YAAkBL,QAAQC,IAAI,CAACG,EAAKE,OAAQD,EAAKC,YACtDH,MAAK,YAA+B,IAAD,mBAA5BI,EAA4B,KAAfC,EAAe,KAC9BD,EAAYE,SAAWD,EAAUC,QACnC,EAAKC,SAAS,CACZC,aAAcJ,EAAYE,SAAWD,EAAUC,QAC/CG,SAAS,IAGX,EAAKF,SAAS,CACZH,YAAaA,EACbC,UAAWA,EACXI,SAAS,EACTD,aAAc,QAInBE,OAAM,SAACC,GACN,EAAKJ,SAAS,CACZC,aAAcG,EACdF,SAAS,QArCE,EA0CnBG,aAAe,SAACC,GACd,EAAKN,SAAS,CAAEO,UAAWD,EAAE5D,OAAO8D,SA3CnB,EA8CnBC,aAAe,SAACH,GAEd,GADAA,EAAEI,iBAC2B,KAAzB,EAAKC,MAAMJ,UAAkB,CACC,cAA5B,EAAKI,MAAMV,aACb,EAAKD,SAAS,CACZC,aAAc,GACdJ,YAAa,GACbC,UAAW,KAGb,EAAKE,SAAS,CACZH,YAAa,GACbC,UAAW,KAIf,IAAIc,EAAWC,SAASC,eAAe,SACvCF,EAASG,UAAUC,IAAI,QACvBJ,EAASK,UAAY,6BACrBC,YAAW,WACTN,EAASG,UAAUI,OAAO,UACzB,WAEHN,SAASO,cAAc,eAAeC,OACtC,EAAKrB,SAAS,CAAEE,SAAS,IACzB,EAAKb,UAAU,EAAKsB,MAAMJ,YArE5B,EAAKI,MAAQ,CACXJ,UAAW,GACXV,YAAa,GACbC,UAAW,GACXI,SAAS,EACTD,aAAc,IAEhB,EAAKQ,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKjB,aAAe,EAAKA,aAAaiB,KAAlB,gBAVH,E,qDA2ET,IAAD,EAQHC,KAAKZ,MAAMd,YANb2B,EAFK,EAELA,WACA3E,EAHK,EAGLA,KACA4E,EAJK,EAILA,MACA9D,EALK,EAKLA,UACAC,EANK,EAMLA,UACA8D,EAPK,EAOLA,aAGEC,EAAaJ,KAAKZ,MAAMb,UAAUnB,MAAM,EAAG,GAAGZ,KAAI,SAAC6D,GAAD,MAAe,CACnE1D,OAAQ0D,EAASC,GACjBzD,SAAUwD,EAAS/E,KACnBgC,gBAAiB+C,EAASE,YAC1BlD,gBAAiBgD,EAASG,WAC1B7C,UAAW0C,EAASI,iBACpB7C,aAAcyC,EAASK,SACvBvD,cAAekD,EAASM,eAGlBC,EAAWC,OAAOC,KAAKd,KAAKZ,MAAMd,aAAlCsC,OAEFlC,EACwB,cAA5BsB,KAAKZ,MAAMV,aACP,kBACA,6DAEAqC,EACO,IAAXH,GAAsC,IAAtBR,EAAWQ,OAAe,KACxC,kBAAC,WAAD,KACE,kBAACI,EAAA,EAAD,CAAYpE,GAAIE,IAAMmE,SAAU,IAAKlE,QAAS,EAAGmE,SAAO,GACtD,kBAACpE,EAAA,EAAKqE,IAAN,KACE,kBAACrE,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB,kBAAC,EAAD,CACEpB,UAAWoE,EACX3E,KAAMA,EACNW,SAAUiE,EACV9D,UAAWA,EACXC,UAAWA,EACXF,MAAOgE,KAGX,kBAACrD,EAAA,EAAKE,OAAN,CAAaC,MAAO,IAClB,kBAACH,EAAA,EAAKqE,IAAN,KACE,kBAACrE,EAAA,EAAKE,OAAN,KACGoD,EAAWQ,OAAS,EACnB,kBAAC,IAAD,CAAQhE,GAAG,KAAKwE,UAAQ,GAAxB,uBAIA,kBAAC,IAAD,CAAQxE,GAAG,MACRtB,GAAQ4E,EADX,wBAKF,yBAAKjF,UAAU,mBACb,kBAAC,EAAD,CAAOkB,MAAOiE,UAO1B,kBAACY,EAAA,EAAD,CAAYK,SAAU,KACpB,kBAAC,EAAD,CACExF,UAAWoE,EACX3E,KAAMA,EACNW,SAAUiE,EACV9D,UAAWA,EACXC,UAAWA,EACXF,MAAOgE,IAET,6BACCC,EAAWQ,OAAS,EACnB,kBAAC,IAAD,CAAQhE,GAAG,KAAKY,UAAU,SAAS4D,UAAQ,GAA3C,uBAIA,kBAAC,IAAD,CAAQxE,GAAG,KAAKY,UAAU,UACvBlC,GAAQ4E,EADX,wBAIF,yBAAKjF,UAAU,mBACb,kBAAC,EAAD,CAAOkB,MAAOiE,OAMxB,OACE,6BACE,yBAAKnF,UAAU,UACb,yBAAKqF,GAAG,UACR,kBAACgB,EAAA,EAAD,CAAMC,SAAUvB,KAAKd,cACnB,kBAACoC,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CACEnB,GAAG,aACH3B,QAASqB,KAAKZ,MAAMT,QACpB+C,YAAY,kBACZpG,KAAK,cACL2D,MAAOe,KAAKZ,MAAMJ,UAClB2C,SAAU3B,KAAKlB,eAEjB,kBAACwC,EAAA,EAAKM,OAAN,CAAaC,QAAQ,cAI1B7B,KAAKZ,MAAMV,aACV,kBAACoD,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACD,EAAA,EAAQ9G,OAAT,KAAiB0D,IAGnB,kBAAC,WAAD,KAAWqC,Q,GA5LIiB,cCSVC,E,uKATX,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALUD,a,OCElBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9C,SAASC,eAAe,W","file":"static/js/main.43424dea.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-header\">\r\n        <h3>Github Finder!</h3>\r\n      </div>\r\n      <a\r\n        href=\"https://www.google.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <div className=\"repo-link\">\r\n          <Icon name=\"github\" size=\"large\" />\r\n          &nbsp;Github Repo&nbsp;\r\n          <Icon name=\"angle double right\" size=\"small\" />\r\n        </div>\r\n      </a>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card, Image, Icon } from \"semantic-ui-react\";\r\n\r\nconst ProfileCard = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <Card>\r\n        <Image src={props.avatarUrl} wrapped ui={false} />\r\n        <Card.Content>\r\n          <Card.Header>{props.name}</Card.Header>\r\n          <Card.Header>{props.userName}</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <span>\r\n            <Icon name=\"code\" />\r\n            {props.repos} Repositories\r\n          </span>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <span>\r\n            <Icon name=\"users\" />\r\n            {props.followers} Followers\r\n          </span>\r\n        </Card.Content>\r\n\r\n        <Card.Content extra>\r\n          <span>\r\n            <Icon name=\"hand paper\" />\r\n            {props.following} Following\r\n          </span>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { Fragment } from \"react\";\r\nimport { Card, Grid, Icon, Header } from \"semantic-ui-react\";\r\n\r\nconst Repos = (props) => {\r\n  let renderRepos = props.repos.map((repo) => {\r\n    return (\r\n      <Card key={props.repoId}>\r\n        <Card.Content>\r\n          <Header as=\"h4\">{repo.repoName}</Header>\r\n\r\n          <Grid columns={16}>\r\n            <Grid.Column width={8}>\r\n              <Card.Meta>\r\n                <small>Created: {repo.repoCreatedAt.slice(0, 10)}</small>\r\n              </Card.Meta>\r\n            </Grid.Column>\r\n            <Grid.Column width={8}>\r\n              <Card.Meta>\r\n                <small>Updated: {repo.repoLastUpdated.slice(0, 10)}</small>\r\n              </Card.Meta>\r\n            </Grid.Column>\r\n          </Grid>\r\n          {repo.repoDescription !== null ? (\r\n            <Card.Description>{repo.repoDescription}</Card.Description>\r\n          ) : (\r\n            <Card.Description>(No Description)</Card.Description>\r\n          )}\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Grid columns={2}>\r\n            <Grid.Column>\r\n              <Card.Description textAlign=\"center\">\r\n                <Icon disabled color=\"black\" name=\"star\" />\r\n                {repo.repoStars}\r\n              </Card.Description>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Card.Description textAlign=\"center\">\r\n                {repo.repoLanguage}\r\n              </Card.Description>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  });\r\n\r\n  return <Fragment>{renderRepos}</Fragment>;\r\n};\r\n\r\nexport default Repos;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Message, Grid, Responsive, Header } from \"semantic-ui-react\";\r\nimport ProfileCard from \"../ProfileCard/ProfileCard\";\r\nimport Repos from \"../Repos/Repos\";\r\nimport \"./SearchUser.css\";\r\n\r\nclass SearchUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInput: \"\",\r\n      profileData: {},\r\n      reposData: [],\r\n      loading: false,\r\n      errorMessage: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  fetchUser = (userName) => {\r\n    Promise.all([\r\n      fetch(`https://api.github.com/users/${userName}`),\r\n      fetch(`https://api.github.com/users/${userName}/repos?sort=created`),\r\n    ])\r\n      .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\r\n      .then(([profileData, reposData]) => {\r\n        if (profileData.message || reposData.message) {\r\n          this.setState({\r\n            errorMessage: profileData.message || reposData.message,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            profileData: profileData,\r\n            reposData: reposData,\r\n            loading: false,\r\n            errorMessage: \"\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          errorMessage: err,\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({ userInput: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.userInput === \"\") {\r\n      if (this.state.errorMessage === \"Not Found\") {\r\n        this.setState({\r\n          errorMessage: \"\",\r\n          profileData: {},\r\n          reposData: [],\r\n        });\r\n      } else {\r\n        this.setState({\r\n          profileData: {},\r\n          reposData: [],\r\n        });\r\n      }\r\n\r\n      let toastDiv = document.getElementById(\"toast\");\r\n      toastDiv.classList.add(\"show\");\r\n      toastDiv.innerHTML = \"Please provide a username!\";\r\n      setTimeout(function () {\r\n        toastDiv.classList.remove(\"show\");\r\n      }, 2500);\r\n    } else {\r\n      document.querySelector(\"#user-input\").blur();\r\n      this.setState({ loading: true });\r\n      this.fetchUser(this.state.userInput);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      avatar_url,\r\n      name,\r\n      login,\r\n      followers,\r\n      following,\r\n      public_repos,\r\n    } = this.state.profileData;\r\n\r\n    let reposArray = this.state.reposData.slice(0, 6).map((repoData) => ({\r\n      repoId: repoData.id,\r\n      repoName: repoData.name,\r\n      repoDescription: repoData.description,\r\n      repoLastUpdated: repoData.updated_at,\r\n      repoStars: repoData.stargazers_count,\r\n      repoLanguage: repoData.language,\r\n      repoCreatedAt: repoData.created_at,\r\n    }));\r\n\r\n    const { length } = Object.keys(this.state.profileData);\r\n\r\n    const errorMessage =\r\n      this.state.errorMessage === \"Not Found\"\r\n        ? \"User Not Found!\"\r\n        : \"API Rate Limit Exceeded! Please try again after some time.\";\r\n\r\n    const data =\r\n      length === 0 && reposArray.length === 0 ? null : (\r\n        <Fragment>\r\n          <Responsive as={Grid} minWidth={990} columns={2} divided>\r\n            <Grid.Row>\r\n              <Grid.Column width={6}>\r\n                <ProfileCard\r\n                  avatarUrl={avatar_url}\r\n                  name={name}\r\n                  userName={login}\r\n                  followers={followers}\r\n                  following={following}\r\n                  repos={public_repos}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={10}>\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                    {reposArray.length > 0 ? (\r\n                      <Header as=\"h3\" dividing>\r\n                        Latest Repositories\r\n                      </Header>\r\n                    ) : (\r\n                      <Header as=\"h3\">\r\n                        {name || login} has no repositories\r\n                      </Header>\r\n                    )}\r\n\r\n                    <div className=\"repos-container\">\r\n                      <Repos repos={reposArray} />\r\n                    </div>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Responsive>\r\n          <Responsive maxWidth={990}>\r\n            <ProfileCard\r\n              avatarUrl={avatar_url}\r\n              name={name}\r\n              userName={login}\r\n              followers={followers}\r\n              following={following}\r\n              repos={public_repos}\r\n            />\r\n            <br />\r\n            {reposArray.length > 0 ? (\r\n              <Header as=\"h3\" textAlign=\"center\" dividing>\r\n                Latest Repositories\r\n              </Header>\r\n            ) : (\r\n              <Header as=\"h3\" textAlign=\"center\">\r\n                {name || login} has no repositories\r\n              </Header>\r\n            )}\r\n            <div className=\"repos-container\">\r\n              <Repos repos={reposArray} />\r\n            </div>\r\n          </Responsive>\r\n        </Fragment>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"search\">\r\n          <div id=\"toast\"></div>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Input\r\n                id=\"user-input\"\r\n                loading={this.state.loading}\r\n                placeholder=\"Github Username\"\r\n                name=\"github user\"\r\n                value={this.state.userInput}\r\n                onChange={this.handleSearch}\r\n              />\r\n              <Form.Button content=\"Search\" />\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        {this.state.errorMessage ? (\r\n          <Message negative>\r\n            <Message.Header>{errorMessage}</Message.Header>\r\n          </Message>\r\n        ) : (\r\n          <Fragment>{data}</Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchUser;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport SearchUser from \"./SearchUser/SearchUser\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchUser />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}